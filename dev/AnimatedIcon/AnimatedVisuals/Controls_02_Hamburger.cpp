//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.0.0-build.104+geebe28e7e9
//       
//       Command:
//           LottieGen -Language Cppwinrt -WinUIVersion 2.4 -InputFile Controls_02_Hamburger.json
//       
//       Input file:
//           Controls_02_Hamburger.json (55198 bytes created 12:28-08:00 Feb 8 2021)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   463 |
// |--------------------------+-------|
// | Expression animators     |    55 |
// | KeyFrame animators       |    54 |
// | Reference parameters     |    55 |
// | Expression operations    |     4 |
// |--------------------------+-------|
// | Animated brushes         |     1 |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     2 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |    19 |
// | ShapeVisuals             |    18 |
// |--------------------------+-------|
// | ContainerShapes          |    18 |
// | CompositionSpriteShapes  |    54 |
// |--------------------------+-------|
// | Brushes                  |     1 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
#include "pch.h"
#include "AnimatedVisuals\Controls_02_Hamburger.h"
#include <winrt/Windows.Foundation.Metadata.h>
#include <winrt/Windows.Foundation.Collections.h>
#include <winrt/Windows.UI.Composition.h>
#include "d2d1.h"
#include <d2d1_1.h>
#include <d2d1helper.h>
#include <Windows.Graphics.Interop.h>
#include <winrt/Windows.Graphics.Effects.h>

using namespace winrt::Microsoft::UI::Xaml::Controls;
using namespace winrt::Windows::Foundation;
using namespace winrt::Windows::Foundation::Numerics;
using namespace winrt::Windows::Graphics;
using namespace winrt::Windows::UI;
using namespace winrt::Windows::UI::Composition;
using TimeSpan = winrt::Windows::Foundation::TimeSpan;

namespace winrt::Microsoft::UI::Xaml::Controls::AnimatedVisuals
{
    CppWinRTActivatableClassWithBasicFactory(Controls_02_Hamburger)
}
#include "AnimatedVisuals\Controls_02_Hamburger.g.cpp"

class CanvasGeometry : public winrt::implements<CanvasGeometry,
    IGeometrySource2D,
    ::Windows::Graphics::IGeometrySource2DInterop>
{
    winrt::com_ptr<ID2D1Geometry> _geometry{ nullptr };

public:
    CanvasGeometry(winrt::com_ptr<ID2D1Geometry> geometry)
        : _geometry{ geometry }
    { }

    // IGeometrySource2D.
    winrt::com_ptr<ID2D1Geometry> Geometry() { return _geometry; }

    // IGeometrySource2DInterop.
    IFACEMETHODIMP GetGeometry(ID2D1Geometry** value) override
    {
        _geometry.copy_to(value);
        return S_OK;
    }

    // IGeometrySource2DInterop.
    IFACEMETHODIMP TryGetGeometryUsingFactory(ID2D1Factory*, ID2D1Geometry**) override
    {
        return E_NOTIMPL;
    }
};
class Controls_02_Hamburger_AnimatedVisual : public winrt::implements<Controls_02_Hamburger_AnimatedVisual,
        winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual,
        IClosable>
{
    winrt::com_ptr<ID2D1Factory> _d2dFactory{ nullptr };
    static constexpr int64_t c_durationTicks{ 32500000L };
    Compositor const _c{ nullptr };
    ExpressionAnimation const _reusableExpressionAnimation{ nullptr };
    CompositionPropertySet const _themeProperties{ nullptr };
    CompositionColorBrush _themeColor_Foreground{ nullptr };
    CompositionPathGeometry _pathGeometry_0{ nullptr };
    CompositionPathGeometry _pathGeometry_1{ nullptr };
    CompositionPathGeometry _pathGeometry_2{ nullptr };
    ContainerVisual _root{ nullptr };
    CubicBezierEasingFunction _cubicBezierEasingFunction_0{ nullptr };
    CubicBezierEasingFunction _cubicBezierEasingFunction_1{ nullptr };
    CubicBezierEasingFunction _cubicBezierEasingFunction_2{ nullptr };
    CubicBezierEasingFunction _cubicBezierEasingFunction_3{ nullptr };
    CubicBezierEasingFunction _cubicBezierEasingFunction_4{ nullptr };
    ExpressionAnimation _rootProgress{ nullptr };
    InsetClip _insetClip_0{ nullptr };
    StepEasingFunction _holdThenStepEasingFunction{ nullptr };
    StepEasingFunction _stepThenHoldEasingFunction{ nullptr };

    static void StartProgressBoundAnimation(
        CompositionObject target,
        winrt::hstring animatedPropertyName,
        CompositionAnimation animation,
        ExpressionAnimation controllerProgressExpression)
    {
        target.StartAnimation(animatedPropertyName, animation);
        const auto controller = target.TryGetAnimationController(animatedPropertyName);
        controller.Pause();
        controller.StartAnimation(L"Progress", controllerProgressExpression);
    }

    void BindProperty(
        CompositionObject target,
        winrt::hstring animatedPropertyName,
        winrt::hstring expression,
        winrt::hstring referenceParameterName,
        CompositionObject referencedObject)
    {
        _reusableExpressionAnimation.ClearAllParameters();
        _reusableExpressionAnimation.Expression(expression);
        _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
        target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
    }

    BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(float initialProgress, bool initialValue)
    {
        const auto result = _c.CreateBooleanKeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue);
        return result;
    }

    ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
    {
        const auto result = _c.CreateScalarKeyFrameAnimation();
        result.Duration(TimeSpan{ c_durationTicks });
        result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
        return result;
    }

    CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, winrt::float3x2 transformMatrix)
    {
        const auto result = _c.CreateSpriteShape(geometry);
        result.TransformMatrix(transformMatrix);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 18 - PressedOffToNormalOn
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_00()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.923076928F, true);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_01()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.846153855F, true);
        result.InsertKeyFrame(0.923076928F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_02()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.794871807F, true);
        result.InsertKeyFrame(0.846153855F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 15 - PressedOnToNormalOff
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_03()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.717948735F, true);
        result.InsertKeyFrame(0.794871807F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_04()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.666666687F, true);
        result.InsertKeyFrame(0.717948735F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_05()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.615384638F, true);
        result.InsertKeyFrame(0.666666687F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_06()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.589743614F, true);
        result.InsertKeyFrame(0.615384638F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_07()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.538461566F, true);
        result.InsertKeyFrame(0.589743614F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_08()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.487179488F, true);
        result.InsertKeyFrame(0.538461566F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_09()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.461538464F, true);
        result.InsertKeyFrame(0.487179488F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_10()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.410256416F, true);
        result.InsertKeyFrame(0.461538464F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_11()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.358974367F, true);
        result.InsertKeyFrame(0.410256416F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_12()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.333333343F, true);
        result.InsertKeyFrame(0.358974367F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_13()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.282051295F, true);
        result.InsertKeyFrame(0.333333343F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 04 - NormalOffToNormalOn
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_14()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.179487184F, true);
        result.InsertKeyFrame(0.282051295F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 03 - NormalOnToPressedOn
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_15()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.15384616F, true);
        result.InsertKeyFrame(0.179487184F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_16()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.102564104F, true);
        result.InsertKeyFrame(0.15384616F, false);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 01 - NormalOnToNormalOff
    BooleanKeyFrameAnimation IsVisibleBooleanAnimation_17()
    {
        const auto result = CreateBooleanKeyFrameAnimation(0.102564104F, false);
        return result;
    }

    winrt::com_ptr<CanvasGeometry> Geometry_0()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -17.2660007F, -15.9060001F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddLine({ 17.3589993F, -15.9060001F });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    winrt::com_ptr<CanvasGeometry> Geometry_1()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -17.2660007F, -16.875F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddLine({ 17.3589993F, -16.875F });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    winrt::com_ptr<CanvasGeometry> Geometry_2()
    {
        winrt::com_ptr<ID2D1PathGeometry> path{ nullptr };
        winrt::check_hresult(_d2dFactory->CreatePathGeometry(path.put()));
        winrt::com_ptr<ID2D1GeometrySink> sink{ nullptr };
        winrt::check_hresult(path->Open(sink.put()));
        sink->BeginFigure({ -17.2660007F, -17.8279991F }, D2D1_FIGURE_BEGIN_FILLED);
        sink->AddLine({ 17.3589993F, -17.8279991F });
        sink->EndFigure(D2D1_FIGURE_END_OPEN);
        winrt::check_hresult(sink->Close());
        auto result = winrt::make_self<CanvasGeometry>(path);
        return result;
    }

    // Color bound to theme property value: Foreground
    CompositionColorBrush ThemeColor_Foreground()
    {
        const auto result = _themeColor_Foreground = _c.CreateColorBrush();
        BindProperty(result, L"Color", L"ColorRGB(_theme.Foreground.W*1,_theme.Foreground.X,_theme.Foreground.Y,_theme.Foreground.Z)", L"_theme", _themeProperties);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 18 - PressedOffToNormalOn
    // Transforms for Controls - 02 - Hamburger - 18 - PressedOffToNormalOn Scale(1,1,0)
    CompositionContainerShape ContainerShape_00()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_00());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_01());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_02());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_1p25_to_1(), RootProgress());
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_00(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    // Transforms for Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    // Scale(1,1,0)
    CompositionContainerShape ContainerShape_01()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_03());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_04());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_05());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_1p25_to_0p8(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_01(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
    // Transforms for Controls - 02 - Hamburger - 16 - PressedOffToPressedOn Scale(1,1,0)
    CompositionContainerShape ContainerShape_02()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_06());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_07());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_08());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_1p25_to_0p6(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_02(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 15 - PressedOnToNormalOff
    // Transforms for Controls - 02 - Hamburger - 15 - PressedOnToNormalOff Scale(1,1,0)
    CompositionContainerShape ContainerShape_03()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_09());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_10());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_11());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_0p6_to_1(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_03(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    // Transforms for Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    // Scale(1,1,0)
    CompositionContainerShape ContainerShape_04()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_12());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_13());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_14());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_0p6_to_1p15(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_04(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
    // Transforms for Controls - 02 - Hamburger - 13 - PressedOnToPressedOff Scale(1,1,0)
    CompositionContainerShape ContainerShape_05()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_15());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_16());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_17());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_0p6_to_1p25(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_05(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    // Transforms for Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    // Scale(1,1,0)
    CompositionContainerShape ContainerShape_06()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_18());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_19());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_20());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_1p15_to_1p25(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_06(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    // Transforms for Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    // Scale(1,1,0)
    CompositionContainerShape ContainerShape_07()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_21());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_22());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_23());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_1p15_to_1(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_07(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    // Transforms for Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    // Scale(1,1,0)
    CompositionContainerShape ContainerShape_08()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_24());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_25());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_26());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_1p15_to_0p8(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_08(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    // Transforms for Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    // Scale(1,1,0)
    CompositionContainerShape ContainerShape_09()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_27());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_28());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_29());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_0p8_to_0p55(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_09(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    // Transforms for Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    // Scale(1,1,0)
    CompositionContainerShape ContainerShape_10()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_30());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_31());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_32());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_0p8_to_1(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_10(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    // Transforms for Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    // Scale(1,1,0)
    CompositionContainerShape ContainerShape_11()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_33());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_34());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_35());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_0p8_to_1p15(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_11(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
    // Transforms for Controls - 02 - Hamburger - 06 - NormalOffToPressedOff Scale(1,1,0)
    CompositionContainerShape ContainerShape_12()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_36());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_37());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_38());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_1_to_1p15_0(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_12(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    // Transforms for Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    // Scale(1,1,0)
    CompositionContainerShape ContainerShape_13()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_39());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_40());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_41());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_1_to_1p15_1(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_13(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 04 - NormalOffToNormalOn
    // Transforms for Controls - 02 - Hamburger - 04 - NormalOffToNormalOn Scale(1,1,0)
    CompositionContainerShape ContainerShape_14()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_42());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_43());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_44());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_1_to_1_0(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_14(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 03 - NormalOnToPressedOn
    // Transforms for Controls - 02 - Hamburger - 03 - NormalOnToPressedOn Scale(1,1,0)
    CompositionContainerShape ContainerShape_15()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_45());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_46());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_47());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_1_to_0p8_0(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_15(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    // Transforms for Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    // Scale(1,1,0)
    CompositionContainerShape ContainerShape_16()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_48());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_49());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_50());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_1_to_0p8_1(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_16(), _rootProgress);
        return result;
    }

    // - PreComp layer: Controls - 02 - Hamburger - 01 - NormalOnToNormalOff 
    // Transforms for Controls - 02 - Hamburger - 01 - NormalOnToNormalOff  Scale(1,1,0)
    CompositionContainerShape ContainerShape_17()
    {
        const auto result = _c.CreateContainerShape();
        result.CenterPoint({ 0.0469999984F, -3.875F });
        result.Offset({ 24.0F, 27.875F });
        const auto shapes = result.Shapes();
        // ShapeGroup: Shape 1
        shapes.Append(SpriteShape_51());
        // ShapeGroup: Shape 2 Offset:<0, 13>
        shapes.Append(SpriteShape_52());
        // ShapeGroup: Shape 3 Offset:<0, 26>
        shapes.Append(SpriteShape_53());
        StartProgressBoundAnimation(result, L"Scale.X", ScaleXScalarAnimation_1_to_1_1(), _rootProgress);
        StartProgressBoundAnimation(result, L"Scale.Y", ScaleYScalarAnimation_1_to_1_17(), _rootProgress);
        return result;
    }

    CompositionPathGeometry PathGeometry_0()
    {
        return _pathGeometry_0 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_0())));
    }

    CompositionPathGeometry PathGeometry_1()
    {
        return _pathGeometry_1 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_1())));
    }

    CompositionPathGeometry PathGeometry_2()
    {
        return _pathGeometry_2 = _c.CreatePathGeometry(CompositionPath(CanvasGeometryToIGeometrySource2D(Geometry_2())));
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 18 - PressedOffToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 18 - PressedOffToNormalOn Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_00()
    {
        const auto result = _c.CreateSpriteShape(PathGeometry_0());
        result.StrokeBrush(ThemeColor_Foreground());
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 18 - PressedOffToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 18 - PressedOffToNormalOn Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_01()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(PathGeometry_1(), { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 18 - PressedOffToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 18 - PressedOffToNormalOn Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_02()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(PathGeometry_2(), { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_03()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_04()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_05()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_06()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_07()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_08()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 15 - PressedOnToNormalOff
    // - Transforms for Controls - 02 - Hamburger - 15 - PressedOnToNormalOff Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_09()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 15 - PressedOnToNormalOff
    // - Transforms for Controls - 02 - Hamburger - 15 - PressedOnToNormalOff Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_10()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 15 - PressedOnToNormalOff
    // - Transforms for Controls - 02 - Hamburger - 15 - PressedOnToNormalOff Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_11()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_12()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_13()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_14()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_15()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_16()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_17()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_18()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_19()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_20()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    // - Transforms for Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_21()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    // - Transforms for Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_22()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    // - Transforms for Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_23()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_24()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_25()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_26()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_27()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_28()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_29()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_30()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_31()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_32()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_33()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_34()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_35()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_36()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_37()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_38()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_39()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_40()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_41()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 04 - NormalOffToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 04 - NormalOffToNormalOn Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_42()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 04 - NormalOffToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 04 - NormalOffToNormalOn Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_43()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 04 - NormalOffToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 04 - NormalOffToNormalOn Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_44()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 03 - NormalOnToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 03 - NormalOnToPressedOn Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_45()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 03 - NormalOnToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 03 - NormalOnToPressedOn Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_46()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 03 - NormalOnToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 03 - NormalOnToPressedOn Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_47()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_48()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_49()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    // Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_50()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 01 - NormalOnToNormalOff 
    // - Transforms for Controls - 02 - Hamburger - 01 - NormalOnToNormalOff  Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_51()
    {
        const auto result = _c.CreateSpriteShape(_pathGeometry_0);
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 01 - NormalOnToNormalOff 
    // - Transforms for Controls - 02 - Hamburger - 01 - NormalOnToNormalOff  Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_52()
    {
        // Offset:<0, 13>
        const auto result = CreateSpriteShape(_pathGeometry_1, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 13.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 01 - NormalOnToNormalOff 
    // - Transforms for Controls - 02 - Hamburger - 01 - NormalOnToNormalOff  Scale(1,1,0)
    // Path 1
    CompositionSpriteShape SpriteShape_53()
    {
        // Offset:<0, 26>
        const auto result = CreateSpriteShape(_pathGeometry_2, { 1.0F, 0.0F, 0.0F, 1.0F, 0.0F, 26.0F });
        result.StrokeBrush(_themeColor_Foreground);
        result.StrokeDashCap(CompositionStrokeCap::Round);
        result.StrokeStartCap(CompositionStrokeCap::Round);
        result.StrokeEndCap(CompositionStrokeCap::Round);
        result.StrokeLineJoin(CompositionStrokeLineJoin::Round);
        result.StrokeMiterLimit(2.0F);
        result.StrokeThickness(2.0F);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 18 - PressedOffToNormalOn
    ContainerVisual ContainerVisual_00()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(InsetClip_0());
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 18 - PressedOffToNormalOn Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_00());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_00(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    ContainerVisual ContainerVisual_01()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
        // Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_01());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_01(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
    ContainerVisual ContainerVisual_02()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 16 - PressedOffToPressedOn Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_02());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_02(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 15 - PressedOnToNormalOff
    ContainerVisual ContainerVisual_03()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 15 - PressedOnToNormalOff Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_03());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_03(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    ContainerVisual ContainerVisual_04()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
        // Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_04());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_04(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
    ContainerVisual ContainerVisual_05()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 13 - PressedOnToPressedOff Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_05());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_05(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    ContainerVisual ContainerVisual_06()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
        // Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_06());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_06(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    ContainerVisual ContainerVisual_07()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
        // Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_07());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_07(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    ContainerVisual ContainerVisual_08()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
        // Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_08());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_08(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    ContainerVisual ContainerVisual_09()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
        // Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_09());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_09(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    ContainerVisual ContainerVisual_10()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
        // Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_10());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_10(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    ContainerVisual ContainerVisual_11()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
        // Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_11());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_11(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
    ContainerVisual ContainerVisual_12()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 06 - NormalOffToPressedOff Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_12());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_12(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    ContainerVisual ContainerVisual_13()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
        // Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_13());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_13(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 04 - NormalOffToNormalOn
    ContainerVisual ContainerVisual_14()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 04 - NormalOffToNormalOn Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_14());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_14(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 03 - NormalOnToPressedOn
    ContainerVisual ContainerVisual_15()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 03 - NormalOnToPressedOn Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_15());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_15(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    ContainerVisual ContainerVisual_16()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.IsVisible(false);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
        // Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_16());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_16(), _rootProgress);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 01 - NormalOnToNormalOff
    ContainerVisual ContainerVisual_17()
    {
        const auto result = _c.CreateContainerVisual();
        result.Clip(_insetClip_0);
        result.Size({ 48.0F, 48.0F });
        // Scale:<1, 1>
        result.TransformMatrix({ 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 1.0F });
        // Transforms for Controls - 02 - Hamburger - 01 - NormalOnToNormalOff  Scale(1,1,0)
        result.Children().InsertAtTop(ShapeVisual_17());
        StartProgressBoundAnimation(result, L"IsVisible", IsVisibleBooleanAnimation_17(), _rootProgress);
        return result;
    }

    // The root of the composition.
    ContainerVisual Root()
    {
        const auto result = _root = _c.CreateContainerVisual();
        const auto propertySet = result.Properties();
        propertySet.InsertScalar(L"Progress", 0.0F);
        const auto children = result.Children();
        // PreComp layer: Controls - 02 - Hamburger - 18 - PressedOffToNormalOn
        children.InsertAtTop(ContainerVisual_00());
        // PreComp layer: Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
        children.InsertAtTop(ContainerVisual_01());
        // PreComp layer: Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
        children.InsertAtTop(ContainerVisual_02());
        // PreComp layer: Controls - 02 - Hamburger - 15 - PressedOnToNormalOff
        children.InsertAtTop(ContainerVisual_03());
        // PreComp layer: Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
        children.InsertAtTop(ContainerVisual_04());
        // PreComp layer: Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
        children.InsertAtTop(ContainerVisual_05());
        // PreComp layer: Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
        children.InsertAtTop(ContainerVisual_06());
        // PreComp layer: Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
        children.InsertAtTop(ContainerVisual_07());
        // PreComp layer: Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
        children.InsertAtTop(ContainerVisual_08());
        // PreComp layer: Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
        children.InsertAtTop(ContainerVisual_09());
        // PreComp layer: Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
        children.InsertAtTop(ContainerVisual_10());
        // PreComp layer: Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
        children.InsertAtTop(ContainerVisual_11());
        // PreComp layer: Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
        children.InsertAtTop(ContainerVisual_12());
        // PreComp layer: Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
        children.InsertAtTop(ContainerVisual_13());
        // PreComp layer: Controls - 02 - Hamburger - 04 - NormalOffToNormalOn
        children.InsertAtTop(ContainerVisual_14());
        // PreComp layer: Controls - 02 - Hamburger - 03 - NormalOnToPressedOn
        children.InsertAtTop(ContainerVisual_15());
        // PreComp layer: Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
        children.InsertAtTop(ContainerVisual_16());
        // PreComp layer: Controls - 02 - Hamburger - 01 - NormalOnToNormalOff
        children.InsertAtTop(ContainerVisual_17());
        return result;
    }

    CubicBezierEasingFunction CubicBezierEasingFunction_0()
    {
        return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction({ 0.850000024F, 0.0F }, { 0.25F, 1.0F });
    }

    CubicBezierEasingFunction CubicBezierEasingFunction_1()
    {
        return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction({ 0.850000024F, 0.0F }, { 0.0F, 1.0F });
    }

    CubicBezierEasingFunction CubicBezierEasingFunction_2()
    {
        return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.166999996F }, { 0.0F, 1.0F });
    }

    CubicBezierEasingFunction CubicBezierEasingFunction_3()
    {
        return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction({ 0.166999996F, 0.0F }, { 0.0F, 1.0F });
    }

    CubicBezierEasingFunction CubicBezierEasingFunction_4()
    {
        return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction({ 0.550000012F, 0.0F }, { 0.150000006F, 1.0F });
    }

    ExpressionAnimation RootProgress()
    {
        const auto result = _rootProgress = _c.CreateExpressionAnimation(L"_.Progress");
        result.SetReferenceParameter(L"_", _root);
        return result;
    }

    InsetClip InsetClip_0()
    {
        const auto result = _insetClip_0 = _c.CreateInsetClip();
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 15 - PressedOnToNormalOff
    // - Transforms for Controls - 02 - Hamburger - 15 - PressedOnToNormalOff Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_0p6_to_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.600000024F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.717948735F, 0.600000024F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.789743602F, 1.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_0p6_to_1p15()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.600000024F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.666666687F, 0.600000024F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.71282053F, 1.14999998F, _cubicBezierEasingFunction_2);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_0p6_to_1p25()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.600000024F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.615384638F, 0.600000024F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.661538482F, 1.25F, _cubicBezierEasingFunction_2);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_0p8_to_0p55()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.800000012F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.461538464F, 0.800000012F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.482051283F, 0.550000012F, _cubicBezierEasingFunction_4);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_0p8_to_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.800000012F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.410256416F, 0.800000012F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.456410259F, 1.0F, _cubicBezierEasingFunction_2);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_0p8_to_1p15()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 0.800000012F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.358974367F, 0.800000012F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.405128211F, 1.14999998F, _cubicBezierEasingFunction_2);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 03 - NormalOnToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 03 - NormalOnToPressedOn Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_1_to_0p8_0()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.15384616F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.174358979F, 0.800000012F, _cubicBezierEasingFunction_4);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_1_to_0p8_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.102564104F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.148717955F, 0.800000012F, _cubicBezierEasingFunction_2);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 04 - NormalOffToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 04 - NormalOffToNormalOn Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_1_to_1_0()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.179487184F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.205128208F, 1.25F, _cubicBezierEasingFunction_4);
        result.InsertKeyFrame(0.27692309F, 1.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 01 - NormalOnToNormalOff 
    // - Transforms for Controls - 02 - Hamburger - 01 - NormalOnToNormalOff  Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_1_to_1_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.0307692308F, 0.550000012F, _cubicBezierEasingFunction_4);
        result.InsertKeyFrame(0.0974358991F, 1.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_1_to_1p15_0()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.333333343F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.353846163F, 1.14999998F, _cubicBezierEasingFunction_2);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_1_to_1p15_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.282051295F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.328205138F, 1.14999998F, _cubicBezierEasingFunction_2);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_1p15_to_0p8()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.14999998F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.487179488F, 1.14999998F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.533333361F, 0.800000012F, _cubicBezierEasingFunction_2);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    // - Transforms for Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_1p15_to_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.14999998F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.538461566F, 1.14999998F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.584615409F, 1.0F, _cubicBezierEasingFunction_2);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_1p15_to_1p25()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.14999998F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.589743614F, 1.14999998F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.610256433F, 1.25F, CubicBezierEasingFunction_4());
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_1p25_to_0p6()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.25F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.794871807F, 1.25F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.841025651F, 0.600000024F, CubicBezierEasingFunction_2());
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_1p25_to_0p8()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.25F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.846153855F, 1.25F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.917948723F, 0.800000012F, CubicBezierEasingFunction_1());
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 18 - PressedOffToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 18 - PressedOffToNormalOn Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleXScalarAnimation_1p25_to_1()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.25F, StepThenHoldEasingFunction());
        result.InsertKeyFrame(0.923076928F, 1.25F, HoldThenStepEasingFunction());
        result.InsertKeyFrame(0.994871795F, 1.0F, CubicBezierEasingFunction_0());
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 18 - PressedOffToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 18 - PressedOffToNormalOn Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_00()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.923076928F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.994871795F, 1.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_01()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.846153855F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.917948723F, 1.0F, _cubicBezierEasingFunction_1);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_02()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.794871807F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.841025651F, 1.0F, CubicBezierEasingFunction_3());
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 15 - PressedOnToNormalOff
    // - Transforms for Controls - 02 - Hamburger - 15 - PressedOnToNormalOff Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_03()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.717948735F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.789743602F, 1.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_04()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.666666687F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.71282053F, 1.0F, _cubicBezierEasingFunction_3);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_05()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.615384638F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.661538482F, 1.0F, _cubicBezierEasingFunction_3);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_06()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.589743614F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.610256433F, 1.0F, _cubicBezierEasingFunction_4);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    // - Transforms for Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_07()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.538461566F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.584615409F, 1.0F, _cubicBezierEasingFunction_3);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_08()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.487179488F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.533333361F, 1.0F, _cubicBezierEasingFunction_3);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_09()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.461538464F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.482051283F, 1.0F, _cubicBezierEasingFunction_4);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_10()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.410256416F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.456410259F, 1.0F, _cubicBezierEasingFunction_3);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_11()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.358974367F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.405128211F, 1.0F, _cubicBezierEasingFunction_3);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
    // - Transforms for Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_12()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.333333343F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.353846163F, 1.0F, _cubicBezierEasingFunction_3);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    // - Transforms for Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_13()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.282051295F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.328205138F, 1.0F, _cubicBezierEasingFunction_3);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 04 - NormalOffToNormalOn
    // - Transforms for Controls - 02 - Hamburger - 04 - NormalOffToNormalOn Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_14()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.179487184F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.205128208F, 1.0F, _cubicBezierEasingFunction_4);
        result.InsertKeyFrame(0.27692309F, 1.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 03 - NormalOnToPressedOn
    // - Transforms for Controls - 02 - Hamburger - 03 - NormalOnToPressedOn Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_15()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.15384616F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.174358979F, 1.0F, _cubicBezierEasingFunction_4);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    // - Transforms for Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    // Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_16()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _stepThenHoldEasingFunction);
        result.InsertKeyFrame(0.102564104F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.148717955F, 1.0F, _cubicBezierEasingFunction_3);
        return result;
    }

    // - - PreComp layer: Controls - 02 - Hamburger - 01 - NormalOnToNormalOff 
    // - Transforms for Controls - 02 - Hamburger - 01 - NormalOnToNormalOff  Scale(1,1,0)
    // Scale
    ScalarKeyFrameAnimation ScaleYScalarAnimation_1_to_1_17()
    {
        const auto result = CreateScalarKeyFrameAnimation(0.0F, 1.0F, _holdThenStepEasingFunction);
        result.InsertKeyFrame(0.0307692308F, 1.0F, _cubicBezierEasingFunction_4);
        result.InsertKeyFrame(0.0974358991F, 1.0F, _cubicBezierEasingFunction_0);
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 18 - PressedOffToNormalOn
    // Shape tree root for layer: Hamburger - NormalOffToPointerOverOff
    ShapeVisual ShapeVisual_00()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_00());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 17 - PressedOffToPointerOverOn
    // Shape tree root for layer: Hamburger - NormalOffToPointerOverOff
    ShapeVisual ShapeVisual_01()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_01());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 16 - PressedOffToPressedOn
    // Shape tree root for layer: Hamburger - NormalOffToPointerOverOff
    ShapeVisual ShapeVisual_02()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_02());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 15 - PressedOnToNormalOff
    // Shape tree root for layer: Hamburger - NormalOffToPointerOverOff
    ShapeVisual ShapeVisual_03()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_03());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 14 - PressedOnToPointerOverOff
    // Shape tree root for layer: Hamburger - NormalOffToPointerOverOff
    ShapeVisual ShapeVisual_04()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_04());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 13 - PressedOnToPressedOff
    // Shape tree root for layer: Hamburger - NormalOffToPointerOverOff
    ShapeVisual ShapeVisual_05()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_05());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 12 - PointerOverOffToPressedOff
    // Shape tree root for layer: Hamburger - NormalOffToPointerOverOff
    ShapeVisual ShapeVisual_06()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_06());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 11 - PointerOverOffToNormalOff
    // Shape tree root for layer: Hamburger - NormalOffToPointerOverOff
    ShapeVisual ShapeVisual_07()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_07());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 10 - PointerOverOffToPointerOverOn
    // Shape tree root for layer: Hamburger - NormalOffToPointerOverOff
    ShapeVisual ShapeVisual_08()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_08());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 09 - PointerOverOnToPressedOn
    // Shape tree root for layer: Hamburger - NormalOffToPointerOverOff
    ShapeVisual ShapeVisual_09()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_09());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 08 - PointerOverOnToNormalOn
    // Shape tree root for layer: Hamburger - NormalOffToPointerOverOff
    ShapeVisual ShapeVisual_10()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_10());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 07 - PointerOverOnToPointerOverOff
    // Shape tree root for layer: Hamburger - NormalOffToPointerOverOff
    ShapeVisual ShapeVisual_11()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_11());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 06 - NormalOffToPressedOff
    // Shape tree root for layer: Hamburger - NormalOffToPressedOff 2
    ShapeVisual ShapeVisual_12()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_12());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 05 -NormalOffToPointerOverOff
    // Shape tree root for layer: Hamburger - NormalOffToPointerOverOff
    ShapeVisual ShapeVisual_13()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_13());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 04 - NormalOffToNormalOn
    // Shape tree root for layer: Hamburger - NormalOffToNormalOn
    ShapeVisual ShapeVisual_14()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_14());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 03 - NormalOnToPressedOn
    // Shape tree root for layer: Hamburger - NormalOnToPressedOn 2
    ShapeVisual ShapeVisual_15()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_15());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 02 - NormalOnToPointerOverOn
    // Shape tree root for layer: Hamburger - NormalOnToPointerOverOn
    ShapeVisual ShapeVisual_16()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_16());
        return result;
    }

    // PreComp layer: Controls - 02 - Hamburger - 01 - NormalOnToNormalOff 
    // Shape tree root for layer: Hamburger - NormalOnToNormalOff
    ShapeVisual ShapeVisual_17()
    {
        const auto result = _c.CreateShapeVisual();
        result.Size({ 48.0F, 48.0F });
        result.Shapes().Append(ContainerShape_17());
        return result;
    }

    StepEasingFunction HoldThenStepEasingFunction()
    {
        const auto result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
        result.IsFinalStepSingleFrame(true);
        return result;
    }

    StepEasingFunction StepThenHoldEasingFunction()
    {
        const auto result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
        result.IsInitialStepSingleFrame(true);
        return result;
    }

    static IGeometrySource2D CanvasGeometryToIGeometrySource2D(winrt::com_ptr<CanvasGeometry> geo)
    {
        return geo.as<IGeometrySource2D>();
    }

public:
    Controls_02_Hamburger_AnimatedVisual(
        Compositor compositor,
        CompositionPropertySet themeProperties)
        : _c{compositor}
        , _themeProperties{themeProperties}
        , _reusableExpressionAnimation(compositor.CreateExpressionAnimation())
    {
        winrt::check_hresult(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED, _d2dFactory.put()));
        const auto _ = Root();
    }

    void Close()
    {
        if (_root)
        {
            _root.Close();
        }
    }

    TimeSpan Duration() const
    {
        return TimeSpan{ c_durationTicks };
    }

    Visual RootVisual() const
    {
        return _root;
    }

    winrt::float2 Size() const
    {
        return { 48.0F, 48.0F };
    }

    static bool IsRuntimeCompatible()
    {
        return winrt::Windows::Foundation::Metadata::ApiInformation::IsApiContractPresent(L"Windows.Foundation.UniversalApiContract", 7);
    }
};

winrt::float4 Controls_02_Hamburger::ColorAsVector4(Color color)
{
    return { static_cast<float>(color.R), static_cast<float>(color.G), static_cast<float>(color.B), static_cast<float>(color.A) };
}

CompositionPropertySet Controls_02_Hamburger::EnsureThemeProperties(Compositor compositor)
{
    if (_themeProperties == nullptr)
    {
        _themeProperties = compositor.CreatePropertySet();
        _themeProperties.InsertVector4(L"Foreground", ColorAsVector4((Color)_themeForeground));
    }

    return _themeProperties;
}

Color Controls_02_Hamburger::Foreground()
{
    return _themeForeground;
}

void Controls_02_Hamburger::Foreground(Color value)
{
    _themeForeground = value;
    if (_themeProperties != nullptr)
    {
        _themeProperties.InsertVector4(L"Foreground", ColorAsVector4((Color)_themeForeground));
    }
}

winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual Controls_02_Hamburger::TryCreateAnimatedVisual(
    Compositor const& compositor)
{
    IInspectable diagnostics = nullptr;
    return TryCreateAnimatedVisual(compositor, diagnostics);
}

winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual Controls_02_Hamburger::TryCreateAnimatedVisual(
    Compositor const& compositor,
    IInspectable& diagnostics)
{
    const auto _ = EnsureThemeProperties(compositor);
    diagnostics = nullptr;

    if (Controls_02_Hamburger_AnimatedVisual::IsRuntimeCompatible())
    {
        return winrt::make<Controls_02_Hamburger_AnimatedVisual>(
            compositor,
            _themeProperties);
    }

    return nullptr;
}

double Controls_02_Hamburger::FrameCount()
{
    return 195.0;
}

double Controls_02_Hamburger::Framerate()
{
    return 60.0;
}

TimeSpan Controls_02_Hamburger::Duration()
{
    return TimeSpan{ 32500000L };
}

double Controls_02_Hamburger::FrameToProgress(double frameNumber)
{
    return frameNumber / 195.0;
}

winrt::Windows::Foundation::Collections::IMapView<hstring, double> Controls_02_Hamburger::Markers()
{
    return winrt::single_threaded_map<winrt::hstring, double>(
        std::map<winrt::hstring, double>
        {
            { L"NormalOnToNormalOff_Start", 0.0 },
            { L"NormalOnToNormalOff_End", 0.0974871794871795 },
            { L"NormalOnToPointerOverOn_Start", 0.102615384615385 },
            { L"NormalOnToPointerOverOn_End", 0.148769230769231 },
            { L"NormalOnToPressedOn_Start", 0.153897435897436 },
            { L"NormalOnToPressedOn_End", 0.174410256410256 },
            { L"NormalOffToNormalOn_Start", 0.179538461538462 },
            { L"NormalOffToNormalOn_End", 0.276974358974359 },
            { L"NormalOffToPointerOverOff_Start", 0.282102564102564 },
            { L"NormalOffToPointerOverOff_End", 0.32825641025641 },
            { L"NormalOffToPressedOff_Start", 0.333384615384615 },
            { L"NormalOffToPressedOff_End", 0.353897435897436 },
            { L"PointerOverOnToPointerOverOff_Start", 0.359025641025641 },
            { L"PointerOverOnToPointerOverOff_End", 0.405179487179487 },
            { L"PointerOverOnToNormalOn_Start", 0.410307692307692 },
            { L"PointerOverOnToNormalOn_End", 0.456461538461538 },
            { L"PointerOverOnToPressedOn_Start", 0.461589743589744 },
            { L"PointerOverOnToPressedOn_End", 0.482102564102564 },
            { L"PointerOverOffToPointerOverOn_Start", 0.487230769230769 },
            { L"PointerOverOffToPointerOverOn_End", 0.533384615384615 },
            { L"PointerOverOffToNormalOff_Start", 0.538512820512821 },
            { L"PointerOverOffToNormalOff_End", 0.584666666666667 },
            { L"PointerOverOffToPressedOff_Start", 0.589794871794872 },
            { L"PointerOverOffToPressedOff_End", 0.610307692307692 },
            { L"PressedOnToPressedOff_Start", 0.615435897435897 },
            { L"PressedOnToPressedOff_End", 0.661589743589744 },
            { L"PressedOnToPointerOverOff_Start", 0.666717948717949 },
            { L"PressedOnToPointerOverOff_End", 0.712871794871795 },
            { L"PressedOnToNormalOff_Start", 0.718 },
            { L"PressedOnToNormalOff_End", 0.789794871794872 },
            { L"PressedOffToPressedOn_Start", 0.794923076923077 },
            { L"PressedOffToPressedOn_End", 0.841076923076923 },
            { L"PressedOffToPointerOverOn_Start", 0.846205128205128 },
            { L"PressedOffToPointerOverOn_End", 0.918 },
            { L"PressedOffToNormalOn_Start", 0.923128205128205 },
            { L"PressedOffToNormalOn_End", 0.994923076923077 },
        }
    ).GetView();
}

void Controls_02_Hamburger::SetColorProperty(hstring const& propertyName, Color value)
{
    if (propertyName == L"Foreground")
    {
        _themeForeground = value;
    }
    else
    {
        return;
    }

    if (_themeProperties != nullptr)
    {
        _themeProperties.InsertVector4(propertyName, ColorAsVector4(value));
    }
}

void Controls_02_Hamburger::SetScalarProperty(hstring const&, double)
{
}
