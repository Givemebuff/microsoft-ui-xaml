#pragma once
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.0.0-build.104+geebe28e7e9
//       
//       Command:
//           LottieGen -Language Cppwinrt -WinUIVersion 2.4 -InputFile Controls_01_Checkmark.json
//       
//       Input file:
//           Controls_01_Checkmark.json (34078 bytes created 16:32-08:00 Nov 23 2020)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#include "common.h"
#include "AnimatedVisuals\Controls_01_Checkmark.g.h"

// Name:        Controls_01_Checkmark
// Frame rate:  60 fps
// Frame count: 224
// Duration:    3733.3 mS
// ________________________________________________________________________________________________________________
// |               Marker                |               Constant                | Frame |   mS   |   Progress    |
// |_____________________________________|_______________________________________|_______|________|_______________|
// | NormalOnToNormalOff_Start           | M_NormalOnToNormalOff_Start           |     0 |    0.0 | 0.0F          |
// | NormalOnToNormalOff_End             | M_NormalOnToNormalOff_End             |     9 |  150.2 | 0.0402232148F |
// | NormalOnToPointerOverOn_Start       | M_NormalOnToPointerOverOn_Start       |    11 |  183.5 | 0.0491517857F |
// | NormalOnToPointerOverOn_End         | M_NormalOnToPointerOverOn_End         |    18 |  300.2 | 0.0804017857F |
// | NormalOnToPressedOn_Start           | M_NormalOnToPressedOn_Start           |    20 |  333.5 | 0.0893303603F |
// | NormalOnToPressedOn_End             | M_NormalOnToPressedOn_End             |    29 |  483.5 | 0.129508927F  |
// | NormalOffToNormalOn_Start           | M_NormalOffToNormalOn_Start           |    30 |  500.2 | 0.133973211F  |
// | NormalOffToNormalOn_End             | M_NormalOffToNormalOn_End             |    59 |  983.5 | 0.26343751F   |
// | NormalOffToPointerOverOff_Start     | M_NormalOffToPointerOverOff_Start     |    60 | 1000.2 | 0.267901778F  |
// | NormalOffToPointerOverOff_End       | M_NormalOffToPointerOverOff_End       |    69 | 1150.2 | 0.308080345F  |
// | NormalOffToPressedOff_Start         | M_NormalOffToPressedOff_Start         |    70 | 1166.8 | 0.312544644F  |
// | NormalOffToPressedOff_End           | M_NormalOffToPressedOff_End           |    79 | 1316.8 | 0.352723211F  |
// | PointerOverOnToPointerOverOff_Start | M_PointerOverOnToPointerOverOff_Start |    80 | 1333.5 | 0.35718751F   |
// | PointerOverOnToPointerOverOff_End   | M_PointerOverOnToPointerOverOff_End   |    89 | 1483.5 | 0.397366077F  |
// | PointerOverOnToNormalOn_Start       | M_PointerOverOnToNormalOn_Start       |    90 | 1500.2 | 0.401830345F  |
// | PointerOverOnToNormalOn_End         | M_PointerOverOnToNormalOn_End         |    99 | 1650.2 | 0.442008942F  |
// | PointerOverOnToPressedOn_Start      | M_PointerOverOnToPressedOn_Start      |   100 | 1666.8 | 0.446473211F  |
// | PointerOverOnToPressedOn_End        | M_PointerOverOnToPressedOn_End        |   109 | 1816.8 | 0.486651778F  |
// | PointerOverOffToPointerOverOn_Start | M_PointerOverOffToPointerOverOn_Start |   110 | 1833.5 | 0.491116077F  |
// | PointerOverOffToPointerOverOn_End   | M_PointerOverOffToPointerOverOn_End   |   119 | 1983.5 | 0.531294644F  |
// | PointerOverOffToNormalOff_Start     | M_PointerOverOffToNormalOff_Start     |   121 | 2016.8 | 0.540223241F  |
// | PointerOverOffToNormalOff_End       | M_PointerOverOffToNormalOff_End       |   129 | 2150.2 | 0.57593751F   |
// | PointerOverOffToPressedOff_Start    | M_PointerOverOffToPressedOff_Start    |   130 | 2166.8 | 0.580401778F  |
// | PointerOverOffToPressedOff_End      | M_PointerOverOffToPressedOff_End      |   139 | 2316.8 | 0.620580375F  |
// | PressedOnToPressedOff_Start         | M_PressedOnToPressedOff_Start         |   140 | 2333.5 | 0.625044644F  |
// | PressedOnToPressedOff_End           | M_PressedOnToPressedOff_End           |   149 | 2483.5 | 0.665223241F  |
// | PressedOnToPointerOverOff_Start     | M_PressedOnToPointerOverOff_Start     |   150 | 2500.2 | 0.66968751F   |
// | PressedOnToPointerOverOff_End       | M_PressedOnToPointerOverOff_End       |   159 | 2650.2 | 0.709866047F  |
// | PressedOnToNormalOff_Start          | M_PressedOnToNormalOff_Start          |   160 | 2666.8 | 0.714330375F  |
// | PressedOnToNormalOff_End            | M_PressedOnToNormalOff_End            |   169 | 2816.8 | 0.754508913F  |
// | PressedOffToPressedOn_Start         | M_PressedOffToPressedOn_Start         |   170 | 2833.5 | 0.758973241F  |
// | PressedOffToPressedOn_End           | M_PressedOffToPressedOn_End           |   179 | 2983.5 | 0.799151778F  |
// | PressedOffToPointerOverOn_Start     | M_PressedOffToPointerOverOn_Start     |   180 | 3000.2 | 0.803616047F  |
// | PressedOffToPointerOverOn_End       | M_PressedOffToPointerOverOn_End       |   199 | 3316.8 | 0.88843751F   |
// | PressedOffToNormalOn_Start          | M_PressedOffToNormalOn_Start          |   200 | 3333.5 | 0.892901778F  |
// | PressedOffToNormalOn_End            | M_PressedOffToNormalOn_End            |   219 | 3650.2 | 0.977723241F  |
// | IndeterminateNormal                 | M_IndeterminateNormal                 |   220 | 3666.8 | 0.98218751F   |
// | IndeterminatePointerOver            | M_IndeterminatePointerOver            |   221 | 3683.5 | 0.986651778F  |
// | IndeterminatePressed                | M_IndeterminatePressed                |   222 | 3700.2 | 0.991116047F  |
// ----------------------------------------------------------------------------------------------------------------
// _________________________________________________________
// | Theme property |  Accessor  | Type  |  Default value  |
// |________________|____________|_______|_________________|
// | Foreground     | Foreground | Color | #FF000000 Black |
// ---------------------------------------------------------
class Controls_01_Checkmark
    : public winrt::implementation::Controls_01_CheckmarkT<Controls_01_Checkmark>
{
    winrt::Windows::UI::Composition::CompositionPropertySet _themeProperties{ nullptr };
    winrt::Windows::UI::Color _themeForeground{ 0xFF, 0x00, 0x00, 0x00 };
    winrt::Windows::UI::Composition::CompositionPropertySet EnsureThemeProperties(winrt::Windows::UI::Composition::Compositor compositor);

    static winrt::Windows::Foundation::Numerics::float4 ColorAsVector4(winrt::Windows::UI::Color color);
public:
    // Animation duration: 3.733 seconds.
    static constexpr int64_t c_durationTicks{ 37333333L };

    // Marker: NormalOnToNormalOff_Start.
    static constexpr float M_NormalOnToNormalOff_Start{ 0.0F };

    // Marker: NormalOnToNormalOff_End.
    static constexpr float M_NormalOnToNormalOff_End{ 0.0402232148F };

    // Marker: NormalOnToPointerOverOn_Start.
    static constexpr float M_NormalOnToPointerOverOn_Start{ 0.0491517857F };

    // Marker: NormalOnToPointerOverOn_End.
    static constexpr float M_NormalOnToPointerOverOn_End{ 0.0804017857F };

    // Marker: NormalOnToPressedOn_Start.
    static constexpr float M_NormalOnToPressedOn_Start{ 0.0893303603F };

    // Marker: NormalOnToPressedOn_End.
    static constexpr float M_NormalOnToPressedOn_End{ 0.129508927F };

    // Marker: NormalOffToNormalOn_Start.
    static constexpr float M_NormalOffToNormalOn_Start{ 0.133973211F };

    // Marker: NormalOffToNormalOn_End.
    static constexpr float M_NormalOffToNormalOn_End{ 0.26343751F };

    // Marker: NormalOffToPointerOverOff_Start.
    static constexpr float M_NormalOffToPointerOverOff_Start{ 0.267901778F };

    // Marker: NormalOffToPointerOverOff_End.
    static constexpr float M_NormalOffToPointerOverOff_End{ 0.308080345F };

    // Marker: NormalOffToPressedOff_Start.
    static constexpr float M_NormalOffToPressedOff_Start{ 0.312544644F };

    // Marker: NormalOffToPressedOff_End.
    static constexpr float M_NormalOffToPressedOff_End{ 0.352723211F };

    // Marker: PointerOverOnToPointerOverOff_Start.
    static constexpr float M_PointerOverOnToPointerOverOff_Start{ 0.35718751F };

    // Marker: PointerOverOnToPointerOverOff_End.
    static constexpr float M_PointerOverOnToPointerOverOff_End{ 0.397366077F };

    // Marker: PointerOverOnToNormalOn_Start.
    static constexpr float M_PointerOverOnToNormalOn_Start{ 0.401830345F };

    // Marker: PointerOverOnToNormalOn_End.
    static constexpr float M_PointerOverOnToNormalOn_End{ 0.442008942F };

    // Marker: PointerOverOnToPressedOn_Start.
    static constexpr float M_PointerOverOnToPressedOn_Start{ 0.446473211F };

    // Marker: PointerOverOnToPressedOn_End.
    static constexpr float M_PointerOverOnToPressedOn_End{ 0.486651778F };

    // Marker: PointerOverOffToPointerOverOn_Start.
    static constexpr float M_PointerOverOffToPointerOverOn_Start{ 0.491116077F };

    // Marker: PointerOverOffToPointerOverOn_End.
    static constexpr float M_PointerOverOffToPointerOverOn_End{ 0.531294644F };

    // Marker: PointerOverOffToNormalOff_Start.
    static constexpr float M_PointerOverOffToNormalOff_Start{ 0.540223241F };

    // Marker: PointerOverOffToNormalOff_End.
    static constexpr float M_PointerOverOffToNormalOff_End{ 0.57593751F };

    // Marker: PointerOverOffToPressedOff_Start.
    static constexpr float M_PointerOverOffToPressedOff_Start{ 0.580401778F };

    // Marker: PointerOverOffToPressedOff_End.
    static constexpr float M_PointerOverOffToPressedOff_End{ 0.620580375F };

    // Marker: PressedOnToPressedOff_Start.
    static constexpr float M_PressedOnToPressedOff_Start{ 0.625044644F };

    // Marker: PressedOnToPressedOff_End.
    static constexpr float M_PressedOnToPressedOff_End{ 0.665223241F };

    // Marker: PressedOnToPointerOverOff_Start.
    static constexpr float M_PressedOnToPointerOverOff_Start{ 0.66968751F };

    // Marker: PressedOnToPointerOverOff_End.
    static constexpr float M_PressedOnToPointerOverOff_End{ 0.709866047F };

    // Marker: PressedOnToNormalOff_Start.
    static constexpr float M_PressedOnToNormalOff_Start{ 0.714330375F };

    // Marker: PressedOnToNormalOff_End.
    static constexpr float M_PressedOnToNormalOff_End{ 0.754508913F };

    // Marker: PressedOffToPressedOn_Start.
    static constexpr float M_PressedOffToPressedOn_Start{ 0.758973241F };

    // Marker: PressedOffToPressedOn_End.
    static constexpr float M_PressedOffToPressedOn_End{ 0.799151778F };

    // Marker: PressedOffToPointerOverOn_Start.
    static constexpr float M_PressedOffToPointerOverOn_Start{ 0.803616047F };

    // Marker: PressedOffToPointerOverOn_End.
    static constexpr float M_PressedOffToPointerOverOn_End{ 0.88843751F };

    // Marker: PressedOffToNormalOn_Start.
    static constexpr float M_PressedOffToNormalOn_Start{ 0.892901778F };

    // Marker: PressedOffToNormalOn_End.
    static constexpr float M_PressedOffToNormalOn_End{ 0.977723241F };

    // Marker: IndeterminateNormal.
    static constexpr float M_IndeterminateNormal{ 0.98218751F };

    // Marker: IndeterminatePointerOver.
    static constexpr float M_IndeterminatePointerOver{ 0.986651778F };

    // Marker: IndeterminatePressed.
    static constexpr float M_IndeterminatePressed{ 0.991116047F };

    // Theme property: Foreground.
    static inline const winrt::Windows::UI::Color c_themeForeground{ 0xFF, 0x00, 0x00, 0x00 };


    winrt::Windows::UI::Color Foreground();
    void Foreground(winrt::Windows::UI::Color value);

    winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual TryCreateAnimatedVisual(
        winrt::Windows::UI::Composition::Compositor const& compositor);

    winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual TryCreateAnimatedVisual(
        winrt::Windows::UI::Composition::Compositor const& compositor,
        winrt::Windows::Foundation::IInspectable& diagnostics);

    // Gets the number of frames in the animation.
    double FrameCount();

    // Gets the framerate of the animation.
    double Framerate();

    // Gets the duration of the animation.
    winrt::Windows::Foundation::TimeSpan Duration();

    // Converts a zero-based frame number to the corresponding progress value denoting the
    // start of the frame.
    double FrameToProgress(double frameNumber);

    // Returns a map from marker names to corresponding progress values.
    winrt::Windows::Foundation::Collections::IMapView<hstring, double> Markers();

    // Sets the color property with the given name, or does nothing if no such property
    // exists.
    void SetColorProperty(hstring const& propertyName, winrt::Windows::UI::Color value);

    // Sets the scalar property with the given name, or does nothing if no such property
    // exists.
    void SetScalarProperty(hstring const& propertyName, double value);
};
